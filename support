#!/bin/bash

# Colour init
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME_YELLOW=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)

#support functions
function aws-check() {
    if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ] || [ -z "$AWS_SESSION_TOKEN" ]
    then
      echo " [WARN] Missing AWS permission using env: "
      echo "- \$AWS_ACCESS_KEY_ID"
      echo "- \$AWS_SECRET_ACCESS_KEY"
      echo "- \$AWS_SESSION_TOKEN"
      echo "$YELLOW [WARN] The following commands will fail if no credentials are configured on fallback ~/.aws/config $YELLOW"

    fi
}


declare -A LOG_LEVELS
LOG_LEVELS=([0]="emerg" [1]="alert" [2]="crit" [3]="err" [4]="warning" [5]="notice" [6]="info" [7]="debug")
function logger () {
  local LEVEL=${1}
  shift
  if [ ${__VERBOSE} -ge ${LEVEL} ]; then
    printf "$@"
  fi
}

function wait_db () {
  local ADDRESS=${1}
  local PORT=${2}
  local USER=${3}
  local PASS=${4}
  until mysqladmin ping -h${ADDRESS} -P${PORT} -u${USER} -p${PASS} &> /dev/null
    do
        printf "."
        sleep 1
    done

}

function has_config () {
  
  if [ -f "./.secrets" ]
  then
    logger 6 "Loaded Config from ./.secrets\n"
  else
    logger 6 "$RED Please run ./init-compose.bash config before launching to RDS.$RED\n"
    return 1
  fi

}